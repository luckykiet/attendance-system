doctype html
html
    head
        title= title
        link(rel="stylesheet" href="/css/styles.css")
        script(src="/js/jquery-3.7.1.min.js")
    body
        div.container
            h1 Register and Start Beacon
            form(action="/register" method="POST" class="form" id="registerForm")
                div.form-group
                    label(for="deviceId") Device ID:
                    input(type="text" id="deviceId" disabled class="input highlight" value=deviceId)
                div.form-group
                    label(for="serverUrl") Main Server URL:
                    input(type="text" name="serverUrl" id="serverUrl" required class="input" value=serverUrl placeholder="Enter server URL")
                div.form-group
                    label(for="registerId") Register ID:
                    input(type="text" name="registerId" id="registerId" required class="input" value=registerId placeholder="Enter register ID")
                div.form-group
                    label(for="allowedRadius") Allowed Radius (if empty, will use register location):
                    input(type="number" name="allowedRadius" id="allowedRadius" class="input" value=allowedRadius placeholder="Enter allowed radius in meters")    
                div.form-group
                    label(for="latitude") Latitude (if empty, will use register location):
                    input(type="text" name="latitude" id="latitude" class="input")
                div.form-group
                    label(for="longitude") Longitude (if empty, will use register location):
                    input(type="text" name="longitude" id="longitude" class="input")
                div.form-group
                    button(type="button" id="getLocationButton" class="btn btn-secondary") Get Current Location
                div#locationStatus.text-info Location status: <span id="statusMessage">Idle</span>
                button(type="submit" class="btn btn-primary") Register
            if message
                p.message= message
            script.
                $(document).ready(() => {
                    const updateStatusMessage = (message, className) => {
                        const statusElement = $('#statusMessage');
                        statusElement.text(message);
                        statusElement.attr('class', className);
                    };

                    const updateLocationFields = (position) => {
                        const latitude = position.coords.latitude;
                        const longitude = position.coords.longitude;

                        $('#latitude').val(latitude);
                        $('#longitude').val(longitude);

                        updateStatusMessage('Location fetched successfully.', 'text-success');
                    };

                    const handleLocationError = (error) => {
                        switch (error.code) {
                            case error.PERMISSION_DENIED:
                                updateStatusMessage('Permission denied. Please enable location access.', 'text-danger');
                                break;
                            case error.POSITION_UNAVAILABLE:
                                updateStatusMessage('Location information is unavailable.', 'text-warning');
                                break;
                            case error.TIMEOUT:
                                updateStatusMessage('Location request timed out.', 'text-warning');
                                break;
                            default:
                                updateStatusMessage('An unknown error occurred.', 'text-danger');
                        }
                    };

                    $('#getLocationButton').click(() => {
                        updateStatusMessage('Fetching location...', 'text-info');
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(updateLocationFields, handleLocationError);
                        } else {
                            updateStatusMessage('Geolocation is not supported by your browser.', 'text-danger');
                        }
                    });

                    if (!$('#latitude').val() || !$('#longitude').val()) {
                        if (navigator.geolocation) {
                            updateStatusMessage('Fetching location...', 'text-info');
                            navigator.geolocation.getCurrentPosition(updateLocationFields, handleLocationError);
                        } else {
                            updateStatusMessage('Geolocation is not supported by your browser.', 'text-danger');
                        }
                    }
                });
